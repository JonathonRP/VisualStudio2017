<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFdataGrid"
             x:Class="WPFdataGrid.DataGridControl">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary Source="Assets/PlusMinusExpanderStyles.xaml" />
        </Grid.Resources>

        <DataGrid Name="dataGrid" Margin="0" CanUserDeleteRows="False" VerticalContentAlignment="Stretch" ColumnWidth="SizeToHeader" AutoGenerateColumns="False" RowDetailsVisibilityMode="Collapsed">
            <DataGrid.Resources>
                <StackPanel x:Key="ReadOnly">
                    <TextBlock FontWeight="Bold"> Pokedex</TextBlock>
                    <TextBlock> Pokedex is Read-Only</TextBlock>
                </StackPanel>
                <StackPanel x:Key="Edit">
                    <TextBlock FontWeight="Bold"> Pokedex</TextBlock>
                    <TextBlock> Pokedex is in Edit</TextBlock>
                </StackPanel>
            </DataGrid.Resources>

            <DataGrid.Style>
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="RowBackground" Value="WhiteSmoke"/>
                    <Setter Property="ToolTip" Value="{StaticResource ReadOnly}"/>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="RowBackground" Value="White"/>
                                <Setter Property="ToolTip" Value="{StaticResource Edit}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>

            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <Expander Collapsed="Expander_Collapsed" Expanded="Expander_Expanded" Style="{StaticResource PlusMinusExpander}"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="PName" Binding="{Binding PName, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="HP" Binding="{Binding HP, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Attack" Binding="{Binding Attack, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Defense" Binding="{Binding Defense, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Special Attack" Binding="{Binding SPAttack, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Special Defense" Binding="{Binding SPDefense, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Speed" Binding="{Binding Speed, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="First Type" Binding="{Binding Type1, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Second Type" Binding="{Binding Type2, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, NotifyOnTargetUpdated=True}" Width="1*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard Name="Fade">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DataGrid x:Name="details" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ColumnWidth="Auto" Margin="21,0,10,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="CapRate" Header="Cap Rate" Binding="{Binding CapRate, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                            <DataGridTextColumn x:Name="ExpDrop" Header="Exp Drop" Binding="{Binding ExpDrop, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
                        </DataGrid.Columns>

                        <DataGrid.Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Setter Property="RowBackground" Value="WhiteSmoke"/>
                                <Setter Property="ToolTip" Value="{StaticResource ReadOnly}"/>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsReadOnly" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="RowBackground" Value="White"/>
                                            <Setter Property="ToolTip" Value="{StaticResource Edit}"/>
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:2" To="1" Storyboard.TargetProperty="BorderThickness">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseOut" Amplitude="1"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="(Border.BorderBrush).(Opacity)">
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                        <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="00:00:20" To="0" Storyboard.TargetProperty="BorderThickness">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseIn" Amplitude="0"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self},
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                                    </Trigger>
                                    <Trigger Property="Visibility" Value="Visible">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Name="DropIn">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Duration="00:00:01" Storyboard.TargetProperty="Height">
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.5" Value="20"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.RowValidationErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Ellipse Width="12" Height="12"
                                    Fill="Red" Stroke="Black"
                                    StrokeThickness="0.5"/>
                                    <TextBlock FontWeight="Bold" Padding="4,0,0,0"
                                    Margin="0" VerticalAlignment="Center" Foreground="White" Text="!"
                                ToolTip="{ Binding RelativeSource={RelativeSource
                                 FindAncestor, AncestorType={x:Type DataGridRow}},
                                 Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:2" To=".5" Storyboard.TargetProperty="StrokeThickness">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseOut" Amplitude=".5"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                                        <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:2" To="0" Storyboard.TargetProperty="StrokeThickness">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseIn" Amplitude="0"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
                                                        <LinearDoubleKeyFrame KeyTime="00:00:2" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </DataGrid.RowValidationErrorTemplate>

                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>

            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:2" To="1" Storyboard.TargetProperty="BorderThickness">
                                            <ThicknessAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut" Amplitude="1"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="(Border.BorderBrush).(Opacity)">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="00:00:20" To="0" Storyboard.TargetProperty="BorderThickness">
                                            <ThicknessAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseIn" Amplitude="0"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Ellipse Width="12" Height="12"
                        Fill="Red" Stroke="Black"
                        StrokeThickness="0.5"/>
                        <TextBlock FontWeight="Bold" Padding="4,0,0,0"
                        Margin="0" VerticalAlignment="Center" Foreground="White" Text="!"
                                ToolTip="{ Binding RelativeSource={RelativeSource
                                 FindAncestor, AncestorType={x:Type DataGridRow}},
                                 Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:2" To=".5" Storyboard.TargetProperty="StrokeThickness"/>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="StrokeThickness"/>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:3" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>
            
        </DataGrid>
    </Grid>
</UserControl>
